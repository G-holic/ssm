<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">
<!--开启组件扫描【排除Controller层】-->
    <context:component-scan base-package="cn.itcast">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
<!--加载外部属性文件-->
    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>
<!--装配数据源【DruidDataSource】-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${db.driverClassName}"></property>
        <property name="url" value="${db.url}"></property>
        <property name="username" value="${db.username}"></property>
        <property name="password" value="${db.password}"></property>
    </bean>
<!--装配事务管理器【DataSourceTransactionManager】-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
<!--开启声明式事务管理的注解支持
    当事务管理器的id是transactionManager时，可以省略指定transactionmanager属性
-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>

    <!--  Spring整合Mybatis配置  -->
<!-- 装配SqlSessionFactoryBean，管理SqlsessionFcactory-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--  配置数据源属性  -->
        <property name="dataSource" ref="dataSource"></property>
        <!--  配置Mybatis全局配置文件的路径  -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--  配置Mapper映射文件的路径  -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
        <!--  设置类型别名  -->
<!--        <property name="typeAliasesPackage" value="cn.itcast.pojo"></property>-->
        <!-- 配置别名等在原来Mybatis全局配置文件中的其他配置 -->
    </bean>
<!-- 装配MapperScannerConfigurer，管理Mapper代理对象-->
    <mybatis-spring:scan base-package="cn.itcast.mapper"></mybatis-spring:scan>

</beans>